# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'f:\Study\MusicPlayer\code\Retrive\Dialog.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_Retrive(object):
    def setupUi(self, Retrive):
        Retrive.setObjectName("Retrive")
        Retrive.resize(400, 500)
        Retrive.setMinimumSize(QtCore.QSize(400, 500))
        Retrive.setMaximumSize(QtCore.QSize(400, 500))
        self.verticalLayout = QtWidgets.QVBoxLayout(Retrive)
        self.verticalLayout.setObjectName("verticalLayout")
        self.groupBox = QtWidgets.QGroupBox(Retrive)
        self.groupBox.setTitle("")
        self.groupBox.setObjectName("groupBox")
        self.horizontalLayout = QtWidgets.QHBoxLayout(self.groupBox)
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.RecordBtn = QtWidgets.QPushButton(self.groupBox)
        self.RecordBtn.setMinimumSize(QtCore.QSize(60, 60))
        self.RecordBtn.setMaximumSize(QtCore.QSize(60, 60))
        self.RecordBtn.setStyleSheet("QPushButton{\n"
"    \n"
"background-color: rgb(0, 0, 255);\n"
"color:white; \n"
"border-radius: 30px;  \n"
"border: 2px groove gray;\n"
"font: 9pt \\\"AcadEref\\\";\n"
"\n"
"}\n"
"\n"
"QPushButton:hover{\n"
"    border: 4px double rgb(0, 255, 0);\n"
"}\n"
"QPushButton:checked{\n"
"    background-color: rgb(255, 170, 255);\n"
"}")
        self.RecordBtn.setCheckable(True)
        self.RecordBtn.setObjectName("RecordBtn")
        self.horizontalLayout.addWidget(self.RecordBtn)
        self.ImportBtn = QtWidgets.QPushButton(self.groupBox)
        self.ImportBtn.setMinimumSize(QtCore.QSize(60, 60))
        self.ImportBtn.setMaximumSize(QtCore.QSize(60, 60))
        self.ImportBtn.setStyleSheet("QPushButton{\n"
"    \n"
"background-color: rgb(0, 0, 255);\n"
"color:white; \n"
"border-radius: 30px;  \n"
"border: 2px groove gray;\n"
"font: 9pt \\\"AcadEref\\\";\n"
"\n"
"}\n"
"\n"
"QPushButton:hover{\n"
"    border: 4px double rgb(0, 255, 0);\n"
"}")
        self.ImportBtn.setObjectName("ImportBtn")
        self.horizontalLayout.addWidget(self.ImportBtn)
        self.RetriveBtn = QtWidgets.QPushButton(self.groupBox)
        self.RetriveBtn.setMinimumSize(QtCore.QSize(60, 60))
        self.RetriveBtn.setMaximumSize(QtCore.QSize(60, 60))
        self.RetriveBtn.setStyleSheet("QPushButton{\n"
"    \n"
"background-color: rgb(0, 0, 255);\n"
"color:white; \n"
"border-radius: 30px;  \n"
"border: 2px groove gray;\n"
"font: 9pt \\\"AcadEref\\\";\n"
"\n"
"}\n"
"\n"
"QPushButton:hover{\n"
"    border: 4px double rgb(0, 255, 0);\n"
"}\n"
"")
        self.RetriveBtn.setObjectName("RetriveBtn")
        self.horizontalLayout.addWidget(self.RetriveBtn)
        self.verticalLayout.addWidget(self.groupBox)
        self.MatchSongTable = QtWidgets.QTableWidget(Retrive)
        self.MatchSongTable.setEditTriggers(QtWidgets.QAbstractItemView.NoEditTriggers)
        self.MatchSongTable.setSelectionMode(QtWidgets.QAbstractItemView.SingleSelection)
        self.MatchSongTable.setSelectionBehavior(QtWidgets.QAbstractItemView.SelectRows)
        self.MatchSongTable.setShowGrid(True)
        self.MatchSongTable.setGridStyle(QtCore.Qt.SolidLine)
        self.MatchSongTable.setRowCount(5)
        self.MatchSongTable.setObjectName("MatchSongTable")
        self.MatchSongTable.setColumnCount(3)
        item = QtWidgets.QTableWidgetItem()
        self.MatchSongTable.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.MatchSongTable.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.MatchSongTable.setHorizontalHeaderItem(2, item)
        self.MatchSongTable.horizontalHeader().setCascadingSectionResizes(True)
        self.MatchSongTable.horizontalHeader().setDefaultSectionSize(85)
        self.MatchSongTable.horizontalHeader().setSortIndicatorShown(False)
        self.MatchSongTable.horizontalHeader().setStretchLastSection(False)
        self.MatchSongTable.verticalHeader().setCascadingSectionResizes(True)
        self.MatchSongTable.verticalHeader().setDefaultSectionSize(70)
        self.MatchSongTable.verticalHeader().setSortIndicatorShown(False)
        self.verticalLayout.addWidget(self.MatchSongTable)
        self.SongPathLbl = QtWidgets.QLabel(Retrive)
        self.SongPathLbl.setObjectName("SongPathLbl")
        self.verticalLayout.addWidget(self.SongPathLbl)
        self.MatchInfoLbl = QtWidgets.QLabel(Retrive)
        self.MatchInfoLbl.setObjectName("MatchInfoLbl")
        self.verticalLayout.addWidget(self.MatchInfoLbl)

        self.retranslateUi(Retrive)
        QtCore.QMetaObject.connectSlotsByName(Retrive)

    def retranslateUi(self, Retrive):
        _translate = QtCore.QCoreApplication.translate
        Retrive.setWindowTitle(_translate("Retrive", "Dialog"))
        self.RecordBtn.setText(_translate("Retrive", "录制"))
        self.ImportBtn.setText(_translate("Retrive", "导入"))
        self.RetriveBtn.setText(_translate("Retrive", "识曲"))
        self.MatchSongTable.setSortingEnabled(False)
        item = self.MatchSongTable.horizontalHeaderItem(0)
        item.setText(_translate("Retrive", "歌曲名称"))
        item = self.MatchSongTable.horizontalHeaderItem(1)
        item.setText(_translate("Retrive", "匹配时间"))
        item = self.MatchSongTable.horizontalHeaderItem(2)
        item.setText(_translate("Retrive", "匹配准确度"))
        self.SongPathLbl.setText(_translate("Retrive", "当前选择音频:"))
        self.MatchInfoLbl.setText(_translate("Retrive", "匹配耗时:0s"))
